// Copyright 2023 Vibtree, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.29.3
// source: x/x.proto

package x

import (
	y "github.com/vibtreeofficial/psrpc/internal/test/importmapping/y"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_x_x_proto protoreflect.FileDescriptor

const file_x_x_proto_rawDesc = "" +
	"\n" +
	"\tx/x.proto\x12#psrpc.internal.test.importmapping.x\x1a\ty/y.proto2d\n" +
	"\x04Svc1\x12\\\n" +
	"\x04Send\x12).psrpc.internal.test.importmapping.y.MsgY\x1a).psrpc.internal.test.importmapping.y.MsgYB\x1fZ\x1dexample.com/will/be/ignored/xb\x06proto3"

var file_x_x_proto_goTypes = []any{
	(*y.MsgY)(nil), // 0: psrpc.internal.test.importmapping.y.MsgY
}
var file_x_x_proto_depIdxs = []int32{
	0, // 0: psrpc.internal.test.importmapping.x.Svc1.Send:input_type -> psrpc.internal.test.importmapping.y.MsgY
	0, // 1: psrpc.internal.test.importmapping.x.Svc1.Send:output_type -> psrpc.internal.test.importmapping.y.MsgY
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_x_x_proto_init() }
func file_x_x_proto_init() {
	if File_x_x_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_x_x_proto_rawDesc), len(file_x_x_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_x_x_proto_goTypes,
		DependencyIndexes: file_x_x_proto_depIdxs,
	}.Build()
	File_x_x_proto = out.File
	file_x_x_proto_goTypes = nil
	file_x_x_proto_depIdxs = nil
}
