// Copyright 2023 Vibtree, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v5.29.3
// source: internal/test/my_service/my_service.proto

package my_service

import (
	_ "github.com/vibtreeofficial/psrpc/protoc-gen-psrpc/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Ignored struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Ignored) Reset() {
	*x = Ignored{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_test_my_service_my_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ignored) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ignored) ProtoMessage() {}

func (x *Ignored) ProtoReflect() protoreflect.Message {
	mi := &file_internal_test_my_service_my_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ignored.ProtoReflect.Descriptor instead.
func (*Ignored) Descriptor() ([]byte, []int) {
	return file_internal_test_my_service_my_service_proto_rawDescGZIP(), []int{0}
}

type MyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnError int32 `protobuf:"varint,1,opt,name=return_error,json=returnError,proto3" json:"return_error,omitempty"`
}

func (x *MyRequest) Reset() {
	*x = MyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_test_my_service_my_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyRequest) ProtoMessage() {}

func (x *MyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_test_my_service_my_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyRequest.ProtoReflect.Descriptor instead.
func (*MyRequest) Descriptor() ([]byte, []int) {
	return file_internal_test_my_service_my_service_proto_rawDescGZIP(), []int{1}
}

func (x *MyRequest) GetReturnError() int32 {
	if x != nil {
		return x.ReturnError
	}
	return 0
}

type MyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MyResponse) Reset() {
	*x = MyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_test_my_service_my_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyResponse) ProtoMessage() {}

func (x *MyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_test_my_service_my_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyResponse.ProtoReflect.Descriptor instead.
func (*MyResponse) Descriptor() ([]byte, []int) {
	return file_internal_test_my_service_my_service_proto_rawDescGZIP(), []int{2}
}

type MyUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MyUpdate) Reset() {
	*x = MyUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_test_my_service_my_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyUpdate) ProtoMessage() {}

func (x *MyUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_internal_test_my_service_my_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyUpdate.ProtoReflect.Descriptor instead.
func (*MyUpdate) Descriptor() ([]byte, []int) {
	return file_internal_test_my_service_my_service_proto_rawDescGZIP(), []int{3}
}

type MyClientMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MyClientMessage) Reset() {
	*x = MyClientMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_test_my_service_my_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyClientMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyClientMessage) ProtoMessage() {}

func (x *MyClientMessage) ProtoReflect() protoreflect.Message {
	mi := &file_internal_test_my_service_my_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyClientMessage.ProtoReflect.Descriptor instead.
func (*MyClientMessage) Descriptor() ([]byte, []int) {
	return file_internal_test_my_service_my_service_proto_rawDescGZIP(), []int{4}
}

type MyServerMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MyServerMessage) Reset() {
	*x = MyServerMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_test_my_service_my_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyServerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyServerMessage) ProtoMessage() {}

func (x *MyServerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_internal_test_my_service_my_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyServerMessage.ProtoReflect.Descriptor instead.
func (*MyServerMessage) Descriptor() ([]byte, []int) {
	return file_internal_test_my_service_my_service_proto_rawDescGZIP(), []int{5}
}

var File_internal_test_my_service_my_service_proto protoreflect.FileDescriptor

var file_internal_test_my_service_my_service_proto_rawDesc = []byte{
	0x0a, 0x29, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x2f,
	0x6d, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6d, 0x79, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x21, 0x70, 0x73, 0x72,
	0x70, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x0d,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x09, 0x0a,
	0x07, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x22, 0x2e, 0x0a, 0x09, 0x4d, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x0c, 0x0a, 0x0a, 0x4d, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0a, 0x0a, 0x08, 0x4d, 0x79, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x4d, 0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x4d, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xc4, 0x06, 0x0a, 0x09, 0x4d, 0x79, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x68, 0x0a, 0x09, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c,
	0x52, 0x50, 0x43, 0x12, 0x2c, 0x2e, 0x70, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2d, 0x2e, 0x70, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x73, 0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x76, 0x65, 0x52, 0x50, 0x43,
	0x12, 0x2c, 0x2e, 0x70, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d,
	0x2e, 0x70, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x4d, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x06, 0xb2,
	0x89, 0x01, 0x02, 0x40, 0x01, 0x12, 0x6f, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x12, 0x2c, 0x2e, 0x70, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2d, 0x2e, 0x70, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x4d, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x06,
	0xb2, 0x89, 0x01, 0x02, 0x40, 0x02, 0x12, 0x81, 0x01, 0x0a, 0x0f, 0x45, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x32, 0x2e, 0x70, 0x73, 0x72,
	0x70, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d,
	0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x32,
	0x2e, 0x70, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e,
	0x74, 0x65, 0x73, 0x74, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x4d, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x06, 0xb2, 0x89, 0x01, 0x02, 0x20, 0x01, 0x12, 0x77, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x2c, 0x2e, 0x70,
	0x73, 0x72, 0x70, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4d, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x70, 0x73, 0x72,
	0x70, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x08, 0xb2, 0x89, 0x01, 0x04, 0x10,
	0x01, 0x40, 0x02, 0x12, 0x70, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x2e, 0x70, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64,
	0x1a, 0x2b, 0x2e, 0x70, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x06, 0xb2,
	0x89, 0x01, 0x02, 0x08, 0x01, 0x12, 0x78, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x2e, 0x70, 0x73, 0x72,
	0x70, 0x63, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49,
	0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x1a, 0x2b, 0x2e, 0x70, 0x73, 0x72, 0x70, 0x63, 0x2e, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x79, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x22, 0x0a, 0xb2, 0x89, 0x01, 0x06, 0x08, 0x01, 0x10, 0x01, 0x40, 0x02, 0x42,
	0x0d, 0x5a, 0x0b, 0x2f, 0x6d, 0x79, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_internal_test_my_service_my_service_proto_rawDescOnce sync.Once
	file_internal_test_my_service_my_service_proto_rawDescData = file_internal_test_my_service_my_service_proto_rawDesc
)

func file_internal_test_my_service_my_service_proto_rawDescGZIP() []byte {
	file_internal_test_my_service_my_service_proto_rawDescOnce.Do(func() {
		file_internal_test_my_service_my_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_test_my_service_my_service_proto_rawDescData)
	})
	return file_internal_test_my_service_my_service_proto_rawDescData
}

var file_internal_test_my_service_my_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_internal_test_my_service_my_service_proto_goTypes = []interface{}{
	(*Ignored)(nil),         // 0: psrpc.internal.test.customservice.Ignored
	(*MyRequest)(nil),       // 1: psrpc.internal.test.customservice.MyRequest
	(*MyResponse)(nil),      // 2: psrpc.internal.test.customservice.MyResponse
	(*MyUpdate)(nil),        // 3: psrpc.internal.test.customservice.MyUpdate
	(*MyClientMessage)(nil), // 4: psrpc.internal.test.customservice.MyClientMessage
	(*MyServerMessage)(nil), // 5: psrpc.internal.test.customservice.MyServerMessage
}
var file_internal_test_my_service_my_service_proto_depIdxs = []int32{
	1, // 0: psrpc.internal.test.customservice.MyService.NormalRPC:input_type -> psrpc.internal.test.customservice.MyRequest
	1, // 1: psrpc.internal.test.customservice.MyService.IntensiveRPC:input_type -> psrpc.internal.test.customservice.MyRequest
	1, // 2: psrpc.internal.test.customservice.MyService.GetStats:input_type -> psrpc.internal.test.customservice.MyRequest
	4, // 3: psrpc.internal.test.customservice.MyService.ExchangeUpdates:input_type -> psrpc.internal.test.customservice.MyClientMessage
	1, // 4: psrpc.internal.test.customservice.MyService.GetRegionStats:input_type -> psrpc.internal.test.customservice.MyRequest
	0, // 5: psrpc.internal.test.customservice.MyService.ProcessUpdate:input_type -> psrpc.internal.test.customservice.Ignored
	0, // 6: psrpc.internal.test.customservice.MyService.UpdateRegionState:input_type -> psrpc.internal.test.customservice.Ignored
	2, // 7: psrpc.internal.test.customservice.MyService.NormalRPC:output_type -> psrpc.internal.test.customservice.MyResponse
	2, // 8: psrpc.internal.test.customservice.MyService.IntensiveRPC:output_type -> psrpc.internal.test.customservice.MyResponse
	2, // 9: psrpc.internal.test.customservice.MyService.GetStats:output_type -> psrpc.internal.test.customservice.MyResponse
	5, // 10: psrpc.internal.test.customservice.MyService.ExchangeUpdates:output_type -> psrpc.internal.test.customservice.MyServerMessage
	2, // 11: psrpc.internal.test.customservice.MyService.GetRegionStats:output_type -> psrpc.internal.test.customservice.MyResponse
	3, // 12: psrpc.internal.test.customservice.MyService.ProcessUpdate:output_type -> psrpc.internal.test.customservice.MyUpdate
	3, // 13: psrpc.internal.test.customservice.MyService.UpdateRegionState:output_type -> psrpc.internal.test.customservice.MyUpdate
	7, // [7:14] is the sub-list for method output_type
	0, // [0:7] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_internal_test_my_service_my_service_proto_init() }
func file_internal_test_my_service_my_service_proto_init() {
	if File_internal_test_my_service_my_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_test_my_service_my_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ignored); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_test_my_service_my_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_test_my_service_my_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_test_my_service_my_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_test_my_service_my_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyClientMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_test_my_service_my_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyServerMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_test_my_service_my_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_test_my_service_my_service_proto_goTypes,
		DependencyIndexes: file_internal_test_my_service_my_service_proto_depIdxs,
		MessageInfos:      file_internal_test_my_service_my_service_proto_msgTypes,
	}.Build()
	File_internal_test_my_service_my_service_proto = out.File
	file_internal_test_my_service_my_service_proto_rawDesc = nil
	file_internal_test_my_service_my_service_proto_goTypes = nil
	file_internal_test_my_service_my_service_proto_depIdxs = nil
}
